// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ombudsman.DataLayer;

#nullable disable

namespace Ombudsman.DataLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230614091539_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentImportance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.HasKey("Id")
                        .HasName("pk_info_document_importance");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_info_document_importance_state_id");

                    b.ToTable("info_document_importance", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalRealizers")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("additional_realizers");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_user_id");

                    b.Property<DateOnly?>("DocDate")
                        .HasColumnType("date")
                        .HasColumnName("doc_date");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text")
                        .HasColumnName("doc_number");

                    b.Property<string>("DocumentSpeciality")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("document_speciality");

                    b.Property<string>("DocumentSummary")
                        .HasColumnType("text")
                        .HasColumnName("document_summary");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("document_type_id");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("uuid")
                        .HasColumnName("file_id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<int>("ImportanceId")
                        .HasColumnType("integer")
                        .HasColumnName("importance_id");

                    b.Property<string>("Initiative")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("initiative");

                    b.Property<int>("InitiativeTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("initiative_type_id");

                    b.Property<bool>("IsIncludedInStateProgram")
                        .HasColumnType("boolean")
                        .HasColumnName("is_included_in_state_program");

                    b.Property<string>("MainMinistry")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("main_ministry");

                    b.Property<string>("MainRealizer")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("main_realizer");

                    b.Property<int>("ResponsibleSectorId")
                        .HasColumnType("integer")
                        .HasColumnName("responsible_sector_id");

                    b.Property<DateOnly>("SentDate")
                        .HasColumnType("date")
                        .HasColumnName("sent_date");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.Property<string>("StateProgramName")
                        .HasColumnType("text")
                        .HasColumnName("state_program_name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("updated_user_id");

                    b.HasKey("Id")
                        .HasName("pk_doc_document_realization");

                    b.HasIndex("DocumentTypeId")
                        .HasDatabaseName("ix_doc_document_realization_document_type_id");

                    b.HasIndex("FileId")
                        .HasDatabaseName("ix_doc_document_realization_file_id");

                    b.HasIndex("ImportanceId")
                        .HasDatabaseName("ix_doc_document_realization_importance_id");

                    b.HasIndex("InitiativeTypeId")
                        .HasDatabaseName("ix_doc_document_realization_initiative_type_id");

                    b.HasIndex("ResponsibleSectorId")
                        .HasDatabaseName("ix_doc_document_realization_responsible_sector_id");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_doc_document_realization_state_id");

                    b.ToTable("doc_document_realization", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealizationTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateEnteredForVisa")
                        .HasColumnType("date")
                        .HasColumnName("date_entered_for_visa");

                    b.Property<DateOnly>("DateOfVisaIssuance")
                        .HasColumnType("date")
                        .HasColumnName("date_of_visa_issuance");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer")
                        .HasColumnName("organization_id");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("owner_id");

                    b.Property<string>("ResponsibleEmployeeFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("responsible_employee_full_name");

                    b.Property<string>("ResponsibleEmployeePhone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("responsible_employee_phone");

                    b.Property<string>("VisaIssuerFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visa_issuer_full_name");

                    b.Property<string>("VisaIssuerPosition")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visa_issuer_position");

                    b.HasKey("Id")
                        .HasName("pk_doc_document_realization_table");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_doc_document_realization_table_owner_id");

                    b.ToTable("doc_document_realization_table", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealizerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.HasKey("Id")
                        .HasName("pk_enum_document_realizer_type");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_enum_document_realizer_type_state_id");

                    b.ToTable("enum_document_realizer_type", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.HasKey("Id")
                        .HasName("pk_enum_document_type");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_enum_document_type_state_id");

                    b.ToTable("enum_document_type", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.FileModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("extension");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_sys_file");

                    b.ToTable("sys_file", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.GovernmentOrganizationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.HasKey("Id")
                        .HasName("pk_enum_government_organization_type");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_enum_government_organization_type_state_id");

                    b.ToTable("enum_government_organization_type", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InformationLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalRealizers")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("additional_realizers");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_user_id");

                    b.Property<DateOnly?>("DocDate")
                        .HasColumnType("date")
                        .HasColumnName("doc_date");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text")
                        .HasColumnName("doc_number");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("InformationLetterText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("information_letter_text");

                    b.Property<string>("MainRealizer")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("main_realizer");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("owner_id");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("ResponsibleEmployeeFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("responsible_employee_full_name");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("updated_user_id");

                    b.HasKey("Id")
                        .HasName("pk_doc_information_letter");

                    b.HasIndex("OwnerId")
                        .IsUnique()
                        .HasDatabaseName("ix_doc_information_letter_owner_id");

                    b.ToTable("doc_information_letter", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InformationLetterTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateEnteredForVisa")
                        .HasColumnType("date")
                        .HasColumnName("date_entered_for_visa");

                    b.Property<DateOnly>("DateOfVisaIssuance")
                        .HasColumnType("date")
                        .HasColumnName("date_of_visa_issuance");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer")
                        .HasColumnName("organization_id");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("owner_id");

                    b.Property<string>("ResponsibleEmployeeFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("responsible_employee_full_name");

                    b.Property<string>("ResponsibleEmployeePhone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("responsible_employee_phone");

                    b.Property<string>("VisaIssuerFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visa_issuer_full_name");

                    b.Property<string>("VisaIssuerPosition")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visa_issuer_position");

                    b.HasKey("Id")
                        .HasName("pk_doc_information_letter_table");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_doc_information_letter_table_owner_id");

                    b.ToTable("doc_information_letter_table", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InitiativeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.HasKey("Id")
                        .HasName("pk_enum_initiative_type");

                    b.ToTable("enum_initiative_type", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.HasKey("Id")
                        .HasName("pk_enum_language");

                    b.ToTable("enum_language", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_user_id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<int>("GovernmentOrganizationTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("government_organization_type_id");

                    b.Property<bool>("IsGrouper")
                        .HasColumnType("boolean")
                        .HasColumnName("is_grouper");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.Property<int>("SuperiorOrganizationId")
                        .HasColumnType("integer")
                        .HasColumnName("superior_organization_id");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("updated_user_id");

                    b.HasKey("Id")
                        .HasName("pk_info_organization");

                    b.HasIndex("GovernmentOrganizationTypeId")
                        .HasDatabaseName("ix_info_organization_government_organization_type_id");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_info_organization_state_id");

                    b.HasIndex("SuperiorOrganizationId")
                        .HasDatabaseName("ix_info_organization_superior_organization_id");

                    b.ToTable("info_organization", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_user_id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("SectorNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sector_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("updated_user_id");

                    b.HasKey("Id")
                        .HasName("pk_info_sector");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_info_sector_state_id");

                    b.ToTable("info_sector", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.HasKey("Id")
                        .HasName("pk_enum_state");

                    b.ToTable("enum_state", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.StateProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.HasKey("Id")
                        .HasName("pk_info_state_program");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_info_state_program_state_id");

                    b.ToTable("info_state_program", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_user_id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text")
                        .HasColumnName("language_id");

                    b.Property<int?>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("organization_id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_salt");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("updated_user_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_hl_user");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("ix_hl_user_organization_id");

                    b.ToTable("hl_user", "public");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentImportance", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_info_document_importance_enum_state_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealization", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_doc_document_realization_enum_document_type_document_type_id");

                    b.HasOne("Ombudsman.Core.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .HasConstraintName("fk_doc_document_realization_sys_file_file_id");

                    b.HasOne("Ombudsman.Core.Models.DocumentImportance", "Importance")
                        .WithMany()
                        .HasForeignKey("ImportanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_doc_document_realization_info_document_importance_importanc");

                    b.HasOne("Ombudsman.Core.Models.InitiativeType", "InitiativeType")
                        .WithMany()
                        .HasForeignKey("InitiativeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_doc_document_realization_enum_initiative_type_initiative_typ");

                    b.HasOne("Ombudsman.Core.Models.Sector", "ResponsibleSector")
                        .WithMany()
                        .HasForeignKey("ResponsibleSectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_doc_document_realization_info_sector_responsible_sector_id");

                    b.HasOne("Ombudsman.Core.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_doc_document_realization_enum_state_state_id");

                    b.Navigation("DocumentType");

                    b.Navigation("FileModel");

                    b.Navigation("Importance");

                    b.Navigation("InitiativeType");

                    b.Navigation("ResponsibleSector");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealizationTable", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.DocumentRealization", "Owner")
                        .WithMany("Tables")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_doc_document_realization_table_doc_document_realization_own");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealizerType", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_enum_document_realizer_type_enum_state_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentType", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_enum_document_type_enum_state_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.GovernmentOrganizationType", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_enum_government_organization_type_enum_state_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InformationLetter", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.DocumentRealization", "Owner")
                        .WithOne("InformationLetter")
                        .HasForeignKey("Ombudsman.Core.Models.InformationLetter", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_doc_information_letter_doc_document_realization_owner_id");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InformationLetterTable", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.InformationLetter", "Owner")
                        .WithMany("Tables")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_doc_information_letter_table_doc_information_letter_owner_id");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Organization", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.GovernmentOrganizationType", "GovernmentOrganizationType")
                        .WithMany()
                        .HasForeignKey("GovernmentOrganizationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_info_organization_enum_government_organization_type_governm");

                    b.HasOne("Ombudsman.Core.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_info_organization_enum_state_state_id");

                    b.HasOne("Ombudsman.Core.Models.Organization", "SuperiorOrganization")
                        .WithMany()
                        .HasForeignKey("SuperiorOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_info_organization_info_organization_superior_organization_id");

                    b.Navigation("GovernmentOrganizationType");

                    b.Navigation("State");

                    b.Navigation("SuperiorOrganization");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Sector", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_info_sector_enum_state_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.StateProgram", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_info_state_program_enum_state_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.User", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.Organization", "UserOrganization")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_hl_user_info_organization_organization_id");

                    b.Navigation("UserOrganization");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealization", b =>
                {
                    b.Navigation("InformationLetter")
                        .IsRequired();

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InformationLetter", b =>
                {
                    b.Navigation("Tables");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Organization", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
