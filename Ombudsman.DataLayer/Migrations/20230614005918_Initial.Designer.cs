// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ombudsman.DataLayer;

#nullable disable

namespace Ombudsman.DataLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230614005918_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentImportance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.HasKey("Id")
                        .HasName("pk_document_importances");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_document_importances_state_id");

                    b.ToTable("document_importances", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalRealizers")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("additional_realizers");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_user_id");

                    b.Property<DateOnly?>("DocDate")
                        .HasColumnType("date")
                        .HasColumnName("doc_date");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text")
                        .HasColumnName("doc_number");

                    b.Property<string>("DocumentSpeciality")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("document_speciality");

                    b.Property<string>("DocumentSummary")
                        .HasColumnType("text")
                        .HasColumnName("document_summary");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("document_type_id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<int>("ImportanceId")
                        .HasColumnType("integer")
                        .HasColumnName("importance_id");

                    b.Property<string>("Initiative")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("initiative");

                    b.Property<int>("InitiativeTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("initiative_type_id");

                    b.Property<bool>("IsIncludedInStateProgram")
                        .HasColumnType("boolean")
                        .HasColumnName("is_included_in_state_program");

                    b.Property<string>("MainMinistry")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("main_ministry");

                    b.Property<string>("MainRealizer")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("main_realizer");

                    b.Property<int>("ResponsibleSectorId")
                        .HasColumnType("integer")
                        .HasColumnName("responsible_sector_id");

                    b.Property<DateOnly>("SentDate")
                        .HasColumnType("date")
                        .HasColumnName("sent_date");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.Property<string>("StateProgramName")
                        .HasColumnType("text")
                        .HasColumnName("state_program_name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("updated_user_id");

                    b.HasKey("Id")
                        .HasName("pk_document_realizations");

                    b.HasIndex("DocumentTypeId")
                        .HasDatabaseName("ix_document_realizations_document_type_id");

                    b.HasIndex("ImportanceId")
                        .HasDatabaseName("ix_document_realizations_importance_id");

                    b.HasIndex("InitiativeTypeId")
                        .HasDatabaseName("ix_document_realizations_initiative_type_id");

                    b.HasIndex("ResponsibleSectorId")
                        .HasDatabaseName("ix_document_realizations_responsible_sector_id");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_document_realizations_state_id");

                    b.ToTable("document_realizations", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealizationTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateEnteredForVisa")
                        .HasColumnType("date")
                        .HasColumnName("date_entered_for_visa");

                    b.Property<DateOnly>("DateOfVisaIssuance")
                        .HasColumnType("date")
                        .HasColumnName("date_of_visa_issuance");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer")
                        .HasColumnName("organization_id");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("owner_id");

                    b.Property<string>("ResponsibleEmployeeFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("responsible_employee_full_name");

                    b.Property<string>("ResponsibleEmployeePhone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("responsible_employee_phone");

                    b.Property<string>("VisaIssuerFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visa_issuer_full_name");

                    b.Property<string>("VisaIssuerPosition")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visa_issuer_position");

                    b.HasKey("Id")
                        .HasName("pk_document_realization_tables");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_document_realization_tables_owner_id");

                    b.ToTable("document_realization_tables", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealizerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.HasKey("Id")
                        .HasName("pk_document_realizer_types");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_document_realizer_types_state_id");

                    b.ToTable("document_realizer_types", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.HasKey("Id")
                        .HasName("pk_document_types");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_document_types_state_id");

                    b.ToTable("document_types", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Enum.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.HasKey("Id")
                        .HasName("pk_states");

                    b.ToTable("states", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.GovernmentOrganizationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.HasKey("Id")
                        .HasName("pk_government_organization_types");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_government_organization_types_state_id");

                    b.ToTable("government_organization_types", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InformationLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalRealizers")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("additional_realizers");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_user_id");

                    b.Property<DateOnly?>("DocDate")
                        .HasColumnType("date")
                        .HasColumnName("doc_date");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text")
                        .HasColumnName("doc_number");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("InformationLetterText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("information_letter_text");

                    b.Property<string>("MainRealizer")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("main_realizer");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("owner_id");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("ResponsibleEmployeeFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("responsible_employee_full_name");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("updated_user_id");

                    b.HasKey("Id")
                        .HasName("pk_information_letters");

                    b.HasIndex("OwnerId")
                        .IsUnique()
                        .HasDatabaseName("ix_information_letters_owner_id");

                    b.ToTable("information_letters", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InformationLetterTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateEnteredForVisa")
                        .HasColumnType("date")
                        .HasColumnName("date_entered_for_visa");

                    b.Property<DateOnly>("DateOfVisaIssuance")
                        .HasColumnType("date")
                        .HasColumnName("date_of_visa_issuance");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer")
                        .HasColumnName("organization_id");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("owner_id");

                    b.Property<string>("ResponsibleEmployeeFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("responsible_employee_full_name");

                    b.Property<string>("ResponsibleEmployeePhone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("responsible_employee_phone");

                    b.Property<string>("VisaIssuerFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visa_issuer_full_name");

                    b.Property<string>("VisaIssuerPosition")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visa_issuer_position");

                    b.HasKey("Id")
                        .HasName("pk_information_letter_tables");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_information_letter_tables_owner_id");

                    b.ToTable("information_letter_tables", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InitiativeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.HasKey("Id")
                        .HasName("pk_initiative_types");

                    b.ToTable("initiative_types", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.HasKey("Id")
                        .HasName("pk_languages");

                    b.ToTable("languages", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_user_id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<int>("GovernmentOrganizationTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("government_organization_type_id");

                    b.Property<bool>("IsGrouper")
                        .HasColumnType("boolean")
                        .HasColumnName("is_grouper");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.Property<int>("SuperiorOrganizationId")
                        .HasColumnType("integer")
                        .HasColumnName("superior_organization_id");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("updated_user_id");

                    b.HasKey("Id")
                        .HasName("pk_organizations");

                    b.HasIndex("GovernmentOrganizationTypeId")
                        .HasDatabaseName("ix_organizations_government_organization_type_id");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_organizations_state_id");

                    b.HasIndex("SuperiorOrganizationId")
                        .HasDatabaseName("ix_organizations_superior_organization_id");

                    b.ToTable("organizations", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_user_id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("SectorNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sector_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("updated_user_id");

                    b.HasKey("Id")
                        .HasName("pk_sectors");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_sectors_state_id");

                    b.ToTable("sectors", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.StateProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.HasKey("Id")
                        .HasName("pk_state_programs");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_state_programs_state_id");

                    b.ToTable("state_programs", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_user_id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text")
                        .HasColumnName("language_id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_salt");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("updated_user_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentImportance", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.Enum.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_document_importances_states_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealization", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_document_realizations_document_types_document_type_id");

                    b.HasOne("Ombudsman.Core.Models.DocumentImportance", "Importance")
                        .WithMany()
                        .HasForeignKey("ImportanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_document_realizations_document_importances_importance_id");

                    b.HasOne("Ombudsman.Core.Models.InitiativeType", "InitiativeType")
                        .WithMany()
                        .HasForeignKey("InitiativeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_document_realizations_initiative_types_initiative_type_id");

                    b.HasOne("Ombudsman.Core.Models.Sector", "ResponsibleSector")
                        .WithMany()
                        .HasForeignKey("ResponsibleSectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_document_realizations_sectors_responsible_sector_id");

                    b.HasOne("Ombudsman.Core.Models.Enum.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_document_realizations_states_state_id");

                    b.Navigation("DocumentType");

                    b.Navigation("Importance");

                    b.Navigation("InitiativeType");

                    b.Navigation("ResponsibleSector");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealizationTable", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.DocumentRealization", "Owner")
                        .WithMany("Tables")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_document_realization_tables_document_realizations_owner_id");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealizerType", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.Enum.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_document_realizer_types_states_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentType", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.Enum.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_document_types_states_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.GovernmentOrganizationType", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.Enum.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_government_organization_types_states_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InformationLetter", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.DocumentRealization", "Owner")
                        .WithOne("InformationLetter")
                        .HasForeignKey("Ombudsman.Core.Models.InformationLetter", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_information_letters_document_realizations_owner_id");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InformationLetterTable", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.InformationLetter", "Owner")
                        .WithMany("Tables")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_information_letter_tables_information_letters_owner_id");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Organization", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.GovernmentOrganizationType", "GovernmentOrganizationType")
                        .WithMany()
                        .HasForeignKey("GovernmentOrganizationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_organizations_government_organization_types_government_organ");

                    b.HasOne("Ombudsman.Core.Models.Enum.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_organizations_states_state_id");

                    b.HasOne("Ombudsman.Core.Models.Organization", "SuperiorOrganization")
                        .WithMany()
                        .HasForeignKey("SuperiorOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_organizations_organizations_superior_organization_id");

                    b.Navigation("GovernmentOrganizationType");

                    b.Navigation("State");

                    b.Navigation("SuperiorOrganization");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.Sector", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.Enum.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sectors_states_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.StateProgram", b =>
                {
                    b.HasOne("Ombudsman.Core.Models.Enum.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_state_programs_states_state_id");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.DocumentRealization", b =>
                {
                    b.Navigation("InformationLetter")
                        .IsRequired();

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("Ombudsman.Core.Models.InformationLetter", b =>
                {
                    b.Navigation("Tables");
                });
#pragma warning restore 612, 618
        }
    }
}
